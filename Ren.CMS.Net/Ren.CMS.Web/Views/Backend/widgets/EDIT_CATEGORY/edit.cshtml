@model Ren.CMS.Models.Backend.Layout.WidgetReturn
@using Ren.CMS.Helpers
@using Ren.CMS.Models.jsTreeModels


<style type="text/css">

    table.tblEditCat {
    
    width:100%;

    
    
    }

        table.tblEditCat td:first-child {
            width:50%;
            padding:1px;
            margin:1px;
            vertical-align:top;
            text-align:left;
        }

   table.tblEditCat td:last-child {
            width:50%;
            padding:1px;
            margin:1px;
            vertical-align:top;
            text-align:right;
        }
        table.tblEditCat td input, table.tblEditCat td select{
            width:200px;
        }
   

</style>
@{
    
    Ren.CMS.Models.Backend.Content.CategoryModel CM = new Ren.CMS.Models.Backend.Content.CategoryModel();
    Ren.CMS.Models.Backend.Content.ContentTypes CT = new Ren.CMS.Models.Backend.Content.ContentTypes();

    string longName = CM.longName;
    string shortName = CM.shortName;
    string contentType = CM.contentType;

    string subFrom = CM.subFrom;
    string ID = "";
   
    List<object> ctlist = CT.ObjectList();
    List<object> catList = CM.CategoryList();
     ID = Request.Form["widgetHeaderData[id]"].ToString();
    
    for(int c = 0; c<catList.Count; c++)
    {
        string propID =catList[c].GetType().GetProperty("id").GetValue(catList[c], null).ToString();
        if (propID == ID)
        {

            catList.Remove(catList[c]);
        
        }
    
    
    }
    if (Request.Form["widgetHeaderData[id]"] == null)
    {
        throw new Exception("NO ID SET");
    }
   
    SqlHelper SQL = new SqlHelper();
    Ren.CMS.CORE.ThisApplication.ThisApplication TA = new Ren.CMS.CORE.ThisApplication.ThisApplication();

    string query = "SELECT shortName,longName,contentType, subFrom FROM " + TA.getSqlPrefix + "Categories WHERE PKID=@id";
    nSqlParameterCollection PCOL = new nSqlParameterCollection();
    PCOL.Add("@id", ID);
    SQL.SysConnect();

    System.Data.SqlClient.SqlDataReader Cat = SQL.SysReader(query, PCOL);

    if (Cat.HasRows)
    {
        Cat.Read();

        shortName = (string)Cat["shortName"];
        longName = (string)Cat["longName"];
        subFrom = (string)Cat["subFrom"];
        contentType = (string)Cat["contentType"];
    
    }


    Cat.Close();

    SQL.SysDisconnect();
    
    
    }

<script>
  
    
   

    function before()
    {

        var id = $('#@Html.ProtectID("tree_edit")').jstree("get_selected")[0].id;

        $('#@Html.ProtectID("subFrom")').val(id);
       
    }
    var ctx = "@contentType";


    function completeTest()
    {

        new widgetAction('widget:CONTENT_CATEGORIES:open');

            @if(Request.Form["widgetHeaderData[catCTSwitcher]"] != null){
              
                 @Html.Raw("$('#" + Request.Form["widgetHeaderData[catCTSwitcher]"].ToString() + "').val(ctx);")
                  
                 @Html.Raw("$('#" + Request.Form["widgetHeaderData[catCTSwitcher]"].ToString() + "').change();")
                  
                  
              
              }
        @if(Request.Form["widgetHeaderData[jstree]"] != null)
   {


       @Html.Raw("$('#" + Request.Form["widgetHeaderData[jstree]"].ToString() + "').jstree('refresh');")
   
   }

        new widgetAction('widget:EDIT_CATEGORY:close');

    }
    
    $(function () { $('#widget-edit-save').button(); });
    
</script>
@{
    jsTreeSettings Setting = new jsTreeSettings();
    Setting.ajax_read.url = "/BackendHandler/Content/JSTREE_CATEGORIES";
    Setting.ajax_read.additionalRequestParameters.Add("ContentType", "jsCode::ctx");
    Setting.ajax_read.additionalRequestParameters.Add("excludePKID", ID);
    Setting.ajax_read.additionalRequestParameters.Add("Selector", "subSelector");

    Setting.ui.Add("initially_open", new string[] { (subFrom != "" ? subFrom : "NO") });

    string[] plugins = new string[] { "themes", "json_data", "ui", "crrm", "cookies", "dnd", "search", "types", "hotkeys" };
    Setting.plugins.ClearPlugins();
    
    Setting.plugins.Add(plugins);
    
}

  @using (Ajax.BeginForm("Content/EditCategory", "BackendHandler", new AjaxOptions { HttpMethod = "POST", OnComplete = "completeTest()",  UpdateTargetId = "widget-editcat-result" }))
    {
      
      
@Html.HiddenFor(m => ID);      
<table class="tblEditCat">

<tr>
    <td>
        <b>Inhalts Typ</b>

    </td>
    <td>

        @Html.DropDownListFor(m => contentType, new SelectList(ctlist, "ctype", "name", contentType), new  { id = Html.ProtectID("ct") })

        <script type="text/javascript">


            $(function () {

                $('#@Html.ProtectID("ct")').change(function () {
                    var x = $('#@Html.ProtectID("tree_edit")').jstree("get_settings");
                    
                    var value = $(this).val();
                    ctx = value;
                    console.log("Analyizing...");
                    $('#@Html.ProtectID("tree_edit")').jstree("analyze");
                    console.log("Refreshing...");
                    $('#@Html.ProtectID("tree_edit")').jstree("refresh");
                });

            });

        </script>

    </td>
</tr>

<tr>

    <td>

        <b>Kategorie-Name (Kurz)</b>

    </td>
    <td>

        @Html.TextBoxFor(m => shortName)


    </td>

</tr>

<tr>

    <td>

        <b>Kategorie-Name (Lang)</b>

    </td>
    <td>

        @Html.TextBoxFor(m => longName)


    </td>

</tr>

    <tr>
        <td>
            Unterkategorie von:

        </td>

        <td>

        @Html.HiddenFor(m => subFrom, new { id=Html.ProtectID("subFrom") })        
        
            <style>

                #@Html.ProtectID("tree_edit") {
                width: auto;
                overflow:auto;
                max-height:100%;
                
text-align: left;
padding-left: 25px;
border: 1px solid #ddd;
margin-left: 30px;
                }

            </style>

        <div id="@Html.ProtectID("tree_edit")"></div> 
                    <a id="@Html.ProtectID("refresh")" href="javascript:void(0)">
            <span class="ui-icon ui-icon-arrowrefresh-1-s" style="display:inline-block"></span>
          @Html.LanguageLine("LANG_GLOBAL_REFRESH_SINGLE", "GLOBAL", new Dictionary<string, string>() { { "de-DE", "Aktualisieren" }, { "en-US", "Refresh" } })
        </a>

        <script type="text/javascript">


            $(function () {

                @Html.jsTreeScriptOnly(Setting, Html.ProtectID("tree_edit"),false)

           

            });

            $(function () {

                $('#@Html.ProtectID("refresh")').click(function () {

                    $('#@Html.ProtectID("tree_edit")').jstree("refresh");
                     });
                $('#@Html.ProtectID("tree_edit")').bind("select_node.jstree", function (event, data) {
                    // `data.rslt.obj` is the jquery extended node that was clicked
                    var id = data.rslt.obj.attr("id");
                    if (id == "NO") id = "";
                    $('#@Html.ProtectID("subFrom")').val(id);
                         //alert($('#@Html.ProtectID("subFrom")').val());
                     });

            });
        </script>
        </td>

    </tr>
<tr>
    <td>

<div id="widget-editcat-result"></div>


    </td>
    <td>

        <input id="widget-edit-save" type="submit" value="Speichern" />

    </td>


</tr>

    

</table>
  }
