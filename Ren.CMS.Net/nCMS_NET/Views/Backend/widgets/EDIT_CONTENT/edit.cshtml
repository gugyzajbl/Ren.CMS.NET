@using Ren.CMS.CORE.Permissions
@using Ren.CMS.CORE.nhibernate
@using Ren.CMS.CORE.nhibernate.Repositories
@using Ren.CMS.CORE.nhibernate.Domain
@using Ren.CMS.CORE.nhibernate.Base
 

@{
    
    if (Request.Form["widgetHeaderData[contentType]"] == null || Request.Form["widgetHeaderData[id]"] == null)
   {
       Html.Raw("<b>Falsche Parameter. Kein Inhalt verfügbar</b>");
       Response.End();
   }
    string contentType = Request.Form["widgetHeaderData[contentType]"].ToString();

    int id = 0;
    
    if(!int.TryParse(Request.Form["widgetHeaderData[id]"] ,out id))
    {
        Html.Raw("<b>Falsche Parameter. Kein Inhalt verfügbar</b>");
        Response.End();
    
    }


    BaseRepository<ContentType> Repo = new BaseRepository<ContentType>();

    var ct = Repo.GetOne(NHibernate.Criterion.Expression.Where<ContentType>(e => e.Name == contentType));
    if(ct == null)
    {

        Html.Raw("<b>ContenType existiert nicht.</b>");
 
    

    
    }

 
    string partial = "~/Views/Backend/widgets/EDIT_CONTENT/";
    
    if(!String.IsNullOrEmpty(ct.EditPartial))
    {

        partial += ct.EditPartial + ".cshtml"; ;
        
        
    
    }
    else
    {
        partial += "default.cshtml";
    }
  
     
    Ren.CMS.Models.Core.nContentPostModel PostModel = new Ren.CMS.Models.Core.nContentPostModel();
    Ren.CMS.Content.ContentManagement.GetContent GC = new Ren.CMS.Content.ContentManagement.GetContent(id, true, 0);
    List<Ren.CMS.Content.nContent> List = GC.getList();
    if(List.Count == 0)
    {
        Html.Raw("<b>Inhalt existiert nicht.</b>");
      
    Response.End();
    
    }

    Ren.CMS.Content.nContent Cmdl = List[0];
    PostModel.ID = Cmdl.ID;
    PostModel.ContentType = Cmdl.ContentType;
    PostModel.CategoryID = Cmdl.CategoryID.ToString();
    PostModel.CreationDate = Cmdl.CreationDate;
    PostModel.CreatorPKID = Cmdl.CreatorPKID.ToString();
    PostModel.CreatorSpecialName = Cmdl.CreatorSpecialName;
    PostModel.Locked = Cmdl.Locked;
 
    PostModel.ReferenceID = Cmdl.ReferenceID;
 

    List<Ren.CMS.Content.nContentTag> Tags =  Cmdl.getTags();
    PostModel.Tags = new int[Tags.Count];
    int x = 0;
    foreach(Ren.CMS.Content.nContentTag Tag in Tags)
    {

        PostModel.Tags[x] = Tag.ID;

        x++;
    
    }
    List<Ren.CMS.Models.Core.nContentPostModelText> T = new List<Ren.CMS.Models.Core.nContentPostModelText>();
    Cmdl.Texts.ForEach(t =>
        T.Add(new Ren.CMS.Models.Core.nContentPostModelText()
        {
            Title = t.Title,
            TextID = t.Id,
            LongText = t.LongText,
            LangCode = t.LangCode,
            Active = true,
            MetaDescription = t.MetaDescription,
            MetaKeyWords = t.MetaKeyWords,
            PreviewText = t.PreviewText,
            SEOName = t.SEOName
        }));

    PostModel.Texts = T;
    Html.RenderPartial(partial, PostModel);
    }

