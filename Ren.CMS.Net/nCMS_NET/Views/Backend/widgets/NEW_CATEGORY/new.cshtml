@using Ren.CMS.Helpers;
@using Ren.CMS.Models.jsTreeModels

<style type="text/css">

    table.tblNewCat {
    
    width:100%;

    
    
    }

        table.tblNewCat td:first-child {
            width:50%;
            padding:1px;
            margin:1px;
            vertical-align:top;
            text-align:left;
        }

   table.tblNewCat td:last-child {
            width:50%;
            padding:1px;
            margin:1px;
            vertical-align:top;
            text-align:right;
        }
        table.tblNewCat td input, table.tblNewCat td select{
            width:200px;
        }
   

</style>
@{
    
    Ren.CMS.Models.Backend.Content.CategoryModel CM = new Ren.CMS.Models.Backend.Content.CategoryModel();
    Ren.CMS.Models.Backend.Content.ContentTypes CT = new Ren.CMS.Models.Backend.Content.ContentTypes();

    string longName = CM.longName;
    string shortName = CM.shortName;
    string contentType = CM.contentType;

    string subFrom = CM.subFrom;

    jsTreeSettings Setting = new jsTreeSettings();
    Setting.ajax_read.url = "/BackendHandler/Content/JSTREE_CATEGORIES";
    Setting.ajax_read.additionalRequestParameters.Add("ContentType", "jsCode::ctx");
    Setting.ajax_read.additionalRequestParameters.Add("Selector", "subSelector"); 
    string[] plugins = new string[] { "themes", "json_data", "ui", "crrm", "cookies", "dnd", "search", "types", "hotkeys" };
    Setting.plugins.ClearPlugins();

    Setting.plugins.Add(plugins); 
    List<object> ctlist = CT.ObjectList();
    List<object> catList = CM.CategoryList();
    string ctx = "";
    if(Request.Form["widgetHeaderData[ct]"] != null)
    {

        ctx = Request.Form["widgetHeaderData[ct]"].ToString();
    }
    if(ctx == "")
    {
        if(ctlist.Count>0)
        {

            ctx = ctlist[0].GetType().GetProperty("ctype").GetValue(ctlist[0], null).ToString();
            
        }
    }
    }

<script>
    var ctx = "@ctx";
     
    function completeTest()
    {
        
              new widgetAction('widget:CONTENT_CATEGORIES:open');
              @if(Request.Form["widgetHeaderData[catCTSwitcher]"] != null){
              
                 @Html.Raw("$('#" + Request.Form["widgetHeaderData[catCTSwitcher]"].ToString() + "').val(ctx);")
                  
                 @Html.Raw("$('#" + Request.Form["widgetHeaderData[catCTSwitcher]"].ToString() + "').change();")
                  
                  
              
              }

         @if(Request.Form["widgetHeaderData[jstree]"] != null){


       @Html.Raw("$('#" + Request.Form["widgetHeaderData[jstree]"].ToString() + "').jstree('refresh');")
   
   }
        new widgetAction('widget:NEW_CATEGORY:close');

    }

    $(function () { $('#widget-newcat-save').button(); });
</script>

@Html.ValidationSummary(true, "Es wurden nicht alle benötigten Felder ausgefüllt. Bitte behebn Sie die Fehler.")

  @using (Ajax.BeginForm("Content/AddCategory", "BackendHandler", new AjaxOptions { HttpMethod = "POST", OnComplete = "completeTest()", UpdateTargetId = "widget-newcat-result" }))
    {
<table class="tblNewCat">

<tr>
    <td>
        <b>Inhalts Typ</b>

    </td>
    <td>

        @Html.DropDownListFor(m => contentType, new SelectList(ctlist, "ctype", "name"), new { id = Html.ProtectID("ct") })


    </td>
</tr>

<tr>

    <td>

        <b>Kategorie-Name (Kurz)</b>

    </td>
    <td>

        @Html.TextBoxFor(m => shortName)


    </td>

</tr>

<tr>

    <td>

        <b>Kategorie-Name (Lang)</b>

    </td>
    <td>

        @Html.TextBoxFor(m => longName)


    </td>

</tr>

    <tr>
        <td>
            Unterkategorie von:

        </td>

        <td>
            <script type="text/javascript">

                $(function () {

                    $('#@Html.ProtectID("ct")').change(function () {
                    var x = $('#@Html.ProtectID("tree_create")').jstree("get_settings");

                    var value = $(this).val();
                    ctx = value;
                    console.log("Analyizing...");
                    $('#@Html.ProtectID("tree_create")').jstree("analyze");
                    console.log("Refreshing...");
                    $('#@Html.ProtectID("tree_create")').jstree("refresh");
                });

            });
                $(function () {
                    if (ctx == "")
                        ctx = $('#ctype').val();
                    alert(ctx);
                @Html.jsTreeScriptOnly(Setting, Html.ProtectID("tree_create"),false)



                            });

                $(function () {

                    $('#@Html.ProtectID("refresh")').click(function () {

                    $('#@Html.ProtectID("tree_edit")').jstree("refresh");
                });
                $('#@Html.ProtectID("tree_create")').bind("select_node.jstree", function (event, data) {
                    // `data.rslt.obj` is the jquery extended node that was clicked
                    var id = data.rslt.obj.attr("id");
                    if (id == "NO") id = "";
                    $('#@Html.ProtectID("subFrom")').val(id);
                    //alert($('#@Html.ProtectID("subFrom")').val());
                });

            });

            </script>
        
        @Html.HiddenFor(m => subFrom, new { id=Html.ProtectID("subFrom") })        
        
            <style>

                #@Html.ProtectID("tree_create") {
                width: auto;
                overflow:auto;
                max-height:100%;
                
text-align: left;
padding-left: 25px;
border: 1px solid #ddd;
margin-left: 30px;
                }

            </style>
            
 


            <div id="@Html.ProtectID("tree_create")">


            </div>

        </td>

    </tr>
<tr>
    <td>

<div id="widget-newcat-result"></div>


    </td>
    <td>

        <input id="widget-newcat-save" type="submit" value="Speichern" />

    </td>


</tr>

    

</table>
  }
